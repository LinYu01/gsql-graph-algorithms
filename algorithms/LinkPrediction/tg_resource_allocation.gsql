CREATE QUERY tg_resource_allocation(VERTEX a, VERTEX b, SET<STRING> e_type){ 
  /* Write query logic here */ 
  SumAccum<INT> @numNeighbors;
  SumAccum<DOUBLE> @@closeness;
  avs = {a};
  bvs = {b};
  
  IF e_type.size() != 0 THEN
    // Get Neighbors in Common
    na = SELECT n FROM avs -(e_type)-> :n; 
    nb = SELECT n FROM bvs -(e_type)-> :n; 
    u = na INTERSECT nb; 
    tmp = SELECT p FROM u:p -(e_type)- :r ACCUM p.@numNeighbors += 1;
  ELSE
    na = SELECT n FROM avs -()-> :n; 
    nb = SELECT n FROM bvs -()-> :n; 
    u = na INTERSECT nb; 
    tmp = SELECT p FROM u:p -()- :r ACCUM p.@numNeighbors += 1;
  END;
  res = SELECT p FROM tmp:p ACCUM @@closeness += 1/p.@numNeighbors;
  
  PRINT @@closeness; 
}