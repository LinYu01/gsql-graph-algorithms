---
# @           : this file
# {x}         : the directory of file x
# &x          : any file which matches pattern x
# **         : any depth of arbitrary directories
# *           : wildcard character
# [x|y...|z]  : file/directory x, y, or z

  algorithm:
    name: Strongly Connected Components (Small World)
    filename: "tg_scc_small_world.gsql"
    sha_id: ed6ea869749977cc0f3df71225d7325fb81c9767
    description: A strongly connected component (SCC) is a subgraph such that there is a path from any vertex to every other vertex. A graph can contain more than one separate SCC. An SCC algorithm finds the maximal SCCs within a graph. Our implementation is based on the Divide-and-Conquer Strong Components (DCSC) algorithm[1]. In each iteration, pick a pivot vertex v randomly, and find its descendant and predecessor sets, where descendant set D_v is the vertex reachable from v, and predecessor set P_v is the vertices which can reach v (stated another way, reachable from v through reverse edges). The intersection of these two sets is a strongly connected component SCC_v. The graph can be partitioned into 4 sets: SCC_v, descendants D_v excluding SCC_v, predecessors P_v excluding SCC, and the remainders R_v. It is proved that any SCC is a subset of one of the 4 sets [1]. Thus, we can divide the graph into different subsets and detect the SCCs independently and iteratively. In addition to the regular strongly connected component algorithm, we also provide a version that is optimized for small-world graphs. A small world graph in this context means the graph has a hub community, where a vast majority of the vertices of the graph are weakly connected.
    version: lib3.0
    include: false
